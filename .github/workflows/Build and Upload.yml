name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Nuitka
        run: |
          pip install nuitka

      - name: Install colorama
        run: |
          pip install colorama

      - name: Build Python Script
        run: |
          echo 'Yes' | nuitka --output-dir=./build --onefile ./script.py

      - name: Get Latest Release
        id: latest_release
        uses: actions/github-script@v5
        with:
          script: |
            const response = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            console.log(response.data[0].tag_name);
            console.log(response.data[0].name);
        env:
          GITHUB_TOKEN: ${{ secrets.ABSOLUTE_SECRET }}

      - name: Calculate New Version
        id: calculate_version
        run: |
          previous_tag = ${{ steps.latest_release.outputs.tag_name }}
          parts = previous_tag.split('.')
          last_number = int(parts[-1])
          if last_number >= 10:
            parts[-1] = str(int(parts[-1][0]) + 1)
          else:
            parts[-1] = str(last_number + 1)
          new_tag = '.'.join(parts)
          echo "::set-output name=tag_name::${new_tag}"
          echo "::set-output name=release_name::Release ${new_tag}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ABSOLUTE_SECRET }}
        with:
          tag_name: ${{ steps.calculate_version.outputs.tag_name }}
          release_name: ${{ steps.calculate_version.outputs.release_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ABSOLUTE_SECRET }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/script.exe
          asset_name: script.exe
          asset_content_type: application/octet-stream
